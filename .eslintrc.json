{
	"root": true,
	"ignorePatterns": ["**/*"],
	"plugins": ["@nrwl/nx"],
	"overrides": [
		{
			"files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
			"rules": {
				"newline-per-chained-call": "warn",
				"@nrwl/nx/enforce-module-boundaries": [
					"warn",
					{
						"allow": [],
						"depConstraints": [
							{
								"sourceTag": "scope:app",
								"onlyDependOnLibsWithTags": ["*"]
							},
							{
								"sourceTag": "scope:portal",
								"onlyDependOnLibsWithTags": [
									"scope:feature",
									"scope:shared",
									"scope:api",
									"scope:util",
									"scope:types",
									"scope:core"
								]
							},
							{
								"sourceTag": "scope:feature",
								"onlyDependOnLibsWithTags": [
									"scope:feature",
									"scope:data-access",
									"scope:shared",
									"scope:api",
									"scope:util",
									"scope:types",
									"scope:core"
								]
							},
							{
								"sourceTag": "scope:data-access",
								"onlyDependOnLibsWithTags": [
									"scope:data-access",
									"scope:shared",
									"scope:api",
									"scope:util",
									"scope:types",
									"scope:core"
								]
							},
							{
								"sourceTag": "scope:data-access",
								"onlyDependOnLibsWithTags": [
									"scope:shared",
									"scope:api",
									"scope:util",
									"scope:types",
									"scope:core"
								]
							},
							{
								"sourceTag": "scope:shared",
								"onlyDependOnLibsWithTags": [
									"scope:data-access",
									"scope:shared",
									"scope:api",
									"scope:util",
									"scope:types",
									"scope:core"
								]
							},
							{
								"sourceTag": "scope:api",
								"onlyDependOnLibsWithTags": [
									"scope:util",
									"scope:types",
									"scope:core"
								]
							},
							{
								"sourceTag": "scope:util",
								"onlyDependOnLibsWithTags": [
									"scope:util",
									"scope:types"
								]
							},
							{
								"sourceTag": "scope:types",
								"onlyDependOnLibsWithTags": ["scope:types"]
							},
							{
								"sourceTag": "scope:core",
								"onlyDependOnLibsWithTags": [
									"scope:core",
									"scope:types"
								]
							}
						],
						"enforceBuildableLibDependency": true
					}
				]
			}
		},
		{
			"files": ["*.ts", "*.tsx"],
			"extends": ["plugin:@nrwl/nx/typescript"],
			"rules": {}
		},
		{
			"files": ["*.js", "*.jsx"],
			"extends": ["plugin:@nrwl/nx/javascript"],
			"rules": {}
		},
		{
			"files": ["*.ts"],
			"rules": {
				"@angular-eslint/component-class-suffix": "error",
				"@angular-eslint/component-selector": [
					"error",
					{
						"type": "element",
						"prefix": "kebab-case"
					}
				],
				"@angular-eslint/contextual-lifecycle": "error",
				"@angular-eslint/directive-class-suffix": "error",
				"@angular-eslint/directive-selector": [
					"error",
					{
						"type": "attribute",
						"prefix": "camelCase"
					}
				],
				"@angular-eslint/no-attribute-decorator": "error",
				"@angular-eslint/no-forward-ref": "off",
				"@angular-eslint/no-host-metadata-property": "error",
				"@angular-eslint/no-input-rename": "error",
				"@angular-eslint/no-inputs-metadata-property": "error",
				"@angular-eslint/no-output-on-prefix": "error",
				"@angular-eslint/no-output-rename": "error",
				"@angular-eslint/no-outputs-metadata-property": "error",
				"@angular-eslint/use-component-view-encapsulation": "error",
				"@angular-eslint/use-lifecycle-interface": "error",
				"@angular-eslint/use-pipe-transform-interface": "error",
				"@typescript-eslint/consistent-type-assertions": "error",
				"@typescript-eslint/consistent-type-definitions": "error",
				"@typescript-eslint/dot-notation": "off",
				"@typescript-eslint/explicit-member-accessibility": [
					"error",
					{
						"accessibility": "no-public"
					}
				],
				"@typescript-eslint/indent": ["error", 4, { "SwitchCase": 1 }],
				"@typescript-eslint/member-delimiter-style": [
					"error",
					{
						"multiline": {
							"delimiter": "semi",
							"requireLast": true
						},
						"singleline": {
							"delimiter": "semi",
							"requireLast": false
						}
					}
				],
				"@typescript-eslint/member-ordering": "error",
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "enum",
						"format": ["PascalCase"]
					},
					{
						"selector": "enumMember",
						"format": ["UPPER_CASE"]
					}
				],
				"@typescript-eslint/no-empty-function": "off",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-inferrable-types": [
					"error",
					{
						"ignoreParameters": true
					}
				],
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-non-null-assertion": "error",
				"@typescript-eslint/no-shadow": [
					"error",
					{
						"hoist": "all"
					}
				],
				"@typescript-eslint/no-unused-expressions": "error",
				"@typescript-eslint/no-use-before-define": "error",
				"@typescript-eslint/prefer-for-of": "error",
				"@typescript-eslint/prefer-function-type": "error",
				"@typescript-eslint/quotes": ["error", "double"],
				"@typescript-eslint/semi": ["error", "always"],
				"@typescript-eslint/type-annotation-spacing": "error",
				"@typescript-eslint/unified-signatures": "error",
				"arrow-body-style": "error",
				"brace-style": ["error", "1tbs"],
				"complexity": "error",
				"constructor-super": "error",
				"curly": "error",
				"dot-notation": "off",
				"eol-last": "error",
				"eqeqeq": ["error", "smart"],
				"guard-for-in": "error",
				"id-denylist": [
					"error",
					"any",
					"Number",
					"number",
					"String",
					"string",
					"Boolean",
					"boolean",
					"Undefined",
					"undefined"
				],
				"id-match": "error",
				"import/no-deprecated": "warn",
				"indent": "off",
				"max-classes-per-file": ["error", 1],
				"max-len": [
					"error",
					{
						"code": 140
					}
				],
				"no-bitwise": "error",
				"no-caller": "error",
				"no-console": [
					"error",
					{
						"allow": [
							"log",
							"warn",
							"dir",
							"timeLog",
							"assert",
							"clear",
							"count",
							"countReset",
							"group",
							"groupEnd",
							"table",
							"dirxml",
							"error",
							"groupCollapsed",
							"Console",
							"profile",
							"profileEnd",
							"timeStamp",
							"context"
						]
					}
				],
				"no-debugger": "error",
				"no-empty": "off",
				"no-empty-function": "off",
				"no-eval": "error",
				"no-fallthrough": "error",
				"no-new-wrappers": "error",
				"no-restricted-imports": ["error", "rxjs/Rx"],
				"no-shadow": "off",
				"no-throw-literal": "error",
				"no-trailing-spaces": ["error", { "skipBlankLines": true }],
				"no-undef-init": "error",
				"no-underscore-dangle": "error",
				"no-unused-expressions": "error",
				"no-unused-labels": "error",
				"no-use-before-define": "off",
				"no-var": "error",
				"prefer-const": "error",
				"quotes": "error",
				"radix": "error",
				"semi": "error",
				"sonarjs/no-collapsible-if": "error",
				"spaced-comment": [
					"error",
					"always",
					{
						"markers": ["/"]
					}
				]
			},
			"plugins": [
				"eslint-plugin-import",
				"@angular-eslint/eslint-plugin",
				"sonarjs",
				"@typescript-eslint"
			]
		},
		{
			"files": ["*.html"],
			"rules": {
				"@angular-eslint/template/banana-in-box": "error",
				"@angular-eslint/template/eqeqeq": "error",
				"@angular-eslint/template/no-negated-async": "error"
			},
			"plugins": ["@angular-eslint/eslint-plugin-template"]
		},
		{
			"files": ["*.spec.ts"],
			"rules": {
				"@angular-eslint/component-selector": "off",
				"@angular-eslint/directive-selector": "off",
				"max-classes-per-file": "off",
				"max-len": ["error", { "ignoreStrings": true, "code": 140 }],
				"no-throw-literal": "off"
			}
		}
	]
}
