trigger: none
pr: none

pool: 
  name: AflacAWSLinuxAgentPool

resources:
  pipelines:
  - pipeline: Everwell-Frontend-CI
    source: 'Application Pipelines/Frontend/everwell-frontend-ang-azure-CI'
    trigger: 
      branches:
        include:
        - develop

  repositories:
  - repository: generic-templates
    type: github
    name: Aflac-Prod/DevOps-GenericPipeline-Templates
    endpoint: Aflac-Prod
  - repository: templates
    type: github
    name: Aflac-Prod/DevopsTemplates
    endpoint: Aflac-Prod

parameters:
  - name: cleanProjectName
    type: string
    default: '7516051_Everwell-EEP'
  - name: artifactsFolder
    type: string
    default: 'EverwellFrontend'

stages:
  - stage: Dev
    displayName: Deploy to DEV
    jobs:
      - deployment: Dev_Deploy
        displayName: 'Dev Deployment - Primary (us-east-1)'
        environment: Dev
        variables:
          - group: 'EverwellDev'
          - group: 'EverwellDevPrimary'
        workspace:
          clean: "all"
        pool: AflacAWSLinuxAgentPool
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ArtifactoryGenericDownload@3
                  inputs:
                    connection: 'ArtifactoryServiceConnection'
                    specSource: 'taskConfiguration'
                    fileSpec: |
                      {
                        "files": [
                          {
                            "pattern": "Everwell-7516051-Binaries/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip",
                            "target": "$(System.DefaultWorkingDirectory)/"
                          }
                        ]
                      }

                - script: |
                    ls -alR $(System.DefaultWorkingDirectory)

                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.DefaultWorkingDirectory)/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/deploy/'
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true

                - script: |
                    ls -alR $(System.DefaultWorkingDirectory)

                - task: AWSCLI@1
                  displayName: "Upload Website"
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    awsCommand: 's3'
                    awsSubCommand: 'sync'
                    awsArguments: '"$(System.DefaultWorkingDirectory)/deploy/" "s3://$(StaticResourcesBucketName)" --delete'
                
                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"
                    
                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(CloudfrontDistributionId) --paths /*'

  - stage: Intg
    displayName: Deploy to INTG
    dependsOn: [ 'DEV' ]
    jobs:
      - deployment: Intg_Deploy
        displayName: 'Intg Deployment - Primary (us-east-1)'
        environment: Intg
        variables:
          - group: 'EverwellIntg'
          - group: 'EverwellIntgPrimary'
        workspace:
          clean: "all"
        pool: AflacAWSLinuxAgentPool
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ArtifactoryGenericDownload@3
                  inputs:
                    connection: 'ArtifactoryServiceConnection'
                    specSource: 'taskConfiguration'
                    fileSpec: |
                      {
                        "files": [
                          {
                            "pattern": "Everwell-7516051-Binaries/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip",
                            "target": "$(System.DefaultWorkingDirectory)/"
                          }
                        ]
                      }
                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.DefaultWorkingDirectory)/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/deploy/'
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true
                - template: Uses/AWS_AssumeRoleLinux.yaml@templates
                  parameters:
                    accountID: $(accountId)
                - task: AWSCLI@1
                  displayName: "Upload Website"
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    awsCommand: 's3'
                    awsSubCommand: 'sync'
                    awsArguments: '"$(System.DefaultWorkingDirectory)/deploy/" "s3://$(StaticResourcesBucketName)" --delete'

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '947563031041_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(CloudfrontDistributionId) --paths /*'

