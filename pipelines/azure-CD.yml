parameters:
  - name: cleanProjectName
    type: string
    default: '7516051_Everwell-EEP'
  - name: artifactsFolder
    type: string
    default: 'EverwellFrontend'   

trigger: none
pr: none

resources:
  pipelines:
  - pipeline: Everwell-Frontend-CI
    source: 'Application Pipelines/Frontend/everwell-frontend-ang-azure-CI'
    trigger:
      branches:
        include:
        - main
  repositories:
  - repository: templates
    type: github
    name: Aflac-Prod/DevopsTemplates
    endpoint: Aflac-Prod

pool: AflacAWSLinuxAgentPool

stages:
  - stage: Prod
    displayName: Deploy to PROD
    jobs:
      - deployment: Prod_Deploy_Primary
        displayName: 'Prod Deployment - Primary (us-east-1)'
        environment: Prod
        workspace:
          clean: "all"
        variables:
          - group: 'EverwellProd'
          - group: 'EverwellProdPrimary'
        pool: AflacAWSLinuxAgentPool
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ArtifactoryGenericDownload@3 
                  inputs:
                    connection: 'ArtifactoryServiceConnection'
                    specSource: 'taskConfiguration'
                    fileSpec: |
                      {
                        "files": [
                          {
                            "pattern": "Everwell-7516051-Binaries/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip",
                            "target": "$(System.DefaultWorkingDirectory)/"
                          }
                        ]
                      }
                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.DefaultWorkingDirectory)/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/deploy/'
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true
                
                - task: AWSCLI@1
                  displayName: "Upload Website"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 's3'
                    awsSubCommand: 'sync'
                    awsArguments: '"$(System.DefaultWorkingDirectory)/deploy/" "s3://$(StaticResourcesBucketName)" --delete'

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.css" --content-type text/css --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.txt" --content-type text/plain --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(CloudfrontDistributionId) --paths /*'
                
                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(EmpoweredDistributionId) --paths /*'
      - deployment: Prod_Deploy_Secondary
        displayName: 'Prod Deployment - Secondary (us-west-2)'
        environment: Prod
        workspace:
          clean: "all"
        variables:
          - group: 'EverwellProd'
          - group: 'EverwellProdSecondary'
        pool: AflacAWSLinuxAgentPool
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ArtifactoryGenericDownload@3 
                  inputs:
                    connection: 'ArtifactoryServiceConnection'
                    specSource: 'taskConfiguration'
                    fileSpec: |
                      {
                        "files": [
                          {
                            "pattern": "Everwell-7516051-Binaries/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip",
                            "target": "$(System.DefaultWorkingDirectory)/"
                          }
                        ]
                      }
                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.DefaultWorkingDirectory)/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/deploy/'
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true
                - task: AWSCLI@1
                  displayName: "Upload Website"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 's3'
                    awsSubCommand: 'sync'
                    awsArguments: '"$(System.DefaultWorkingDirectory)/deploy/" "s3://$(StaticResourcesBucketName)" --delete'
                
                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.css" --content-type text/css --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.txt" --content-type text/plain --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(CloudfrontDistributionId) --paths /*'
                
                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(EmpoweredDistributionId) --paths /*'
  - stage: Training
    displayName: Deploy to Training
    dependsOn: [ 'Prod' ]
    jobs:
      - deployment: Training_Deploy_Primary
        displayName: 'Training Deployment - Primary (us-east-1)'
        environment: Training
        workspace:
          clean: "all"
        variables:
          - group: 'EverwellTraining'
          - group: 'EverwellTrainingPrimary'
        pool: AflacAWSLinuxAgentPool
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ArtifactoryGenericDownload@3 
                  inputs:
                    connection: 'ArtifactoryServiceConnection'
                    specSource: 'taskConfiguration'
                    fileSpec: |
                      {
                        "files": [
                          {
                            "pattern": "Everwell-7516051-Binaries/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip",
                            "target": "$(System.DefaultWorkingDirectory)/"
                          }
                        ]
                      }
                - task: ExtractFiles@1
                  inputs:
                    archiveFilePatterns: '$(System.DefaultWorkingDirectory)/Frontend/$(resources.pipeline.Everwell-Frontend-CI.runName).zip'
                    destinationFolder: '$(System.DefaultWorkingDirectory)/deploy/'
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true
                
                - task: AWSCLI@1
                  displayName: "Upload Website"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 's3'
                    awsSubCommand: 'sync'
                    awsArguments: '"$(System.DefaultWorkingDirectory)/deploy/" "s3://$(StaticResourcesBucketName)" --delete'

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.js" --exclude="assets/*" --content-type text/javascript --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.css" --content-type text/css --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSShellScript@1
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    disableAutoCwd : true
                    scriptType: inline
                    inlineScript: |
                      aws s3 cp "s3://$(StaticResourcesBucketName)" "s3://$(StaticResourcesBucketName)" --recursive --exclude=** --include="*.txt" --content-type text/plain --content-encoding br --metadata-directive REPLACE
                    workingDirectory: "$(System.DefaultWorkingDirectory)/deploy/"

                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(CloudfrontDistributionId) --paths /*'

                - task: AWSCLI@1
                  displayName: "Invalidate Cloudfront Cache"
                  inputs:
                    awsCredentials: '512987735408_aws-deployment-user'
                    awsCommand: 'cloudfront'
                    awsSubCommand: 'create-invalidation'
                    awsArguments: '--distribution-id $(LabDistributionId) --paths /*'
