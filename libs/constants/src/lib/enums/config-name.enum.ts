export enum ConfigName {
    MESSAGE_CENTER_TOGGLE = "portal.feature.messageCenter.enabled",
    SSN_MASKING_CONFIG = "group.portal.employee.ssn.visibility",
    ENROLLMENT_MANDATORY_RIDER_ID = "user.enrollment.mandatory_rider_ids",
    REGISTRATION_SKIP_PERSONAL_INFO = "member.registration.skip.personal.info",
    REGISTRATION_SKIP_CONTACT_INFO = "member.registration.skip.contact.info",
    REGISTRATION_SKIP_DEPENDENTS = "member.registration.skip.add.dependent",
    SELF_ENROLLMENT = "aflac.producer.selfEnrollment.enable",
    MEMBER_SELFSERVICE_POLICYREPLACE_KNOCKOUTQUESTIONID = "member.selfService.policyReplace.knockOutQuestionId",
    ENABLE_SIT_CODE_HIERARCHY = "general.enable.sit_code.hierarchy",
    BROKER_GROUP_VAS_EXCEPTIONS = "broker.group_details.exceptions.vas_exceptions.enable",
    BENEFICIARY_TYPE_ALLOWED = "general.aflac_groups.application.beneficiaries.allowed_types",
    PRIMARY_SHE_RIDER = "user.enrollment.she.primary.riderId",
    DEFAULT_POST_TAX_PLAN = "general.enrollment.only_be_post_tax_plan_ids",
    SECONDARY_SHE_RIDER = "user.enrollment.she.secondary.riderId",
    AFLAC_GROUP_PRICING_LAYOUT = "general.aflac_groups.product_price_layout",
    FRAUD_PROTECTION_CONFIRMATION = "appFlow.employerFunded.confirmation.message",
    MMP_WIDGET_LAYOUT = "MMP_widgets_layout",
    HQ_PROTECTION_CONFIRMATION = "appFlow.HQFunded.confirmation.message",
    BENEFIT_DOLLARS = "general.feature.enable.benefitDollars",
    PCR_DIRECT_REMOVE_DEPENDENT = "broker.direct_group.remove_dependent.option_show",
    CARRIER_CREATE_QUOTE = "broker.group_details.carrier_ids_create_quick_quote",
    AFLAC_GROUP_REFRESH = "general.aflac_groups.allow_aflac_group_refresh.from_manage_account",
    EMPLOYER_CONTRIBUTION_PLANS = "user.enrollment.hcfsa.employer_contribution.plans",
    HCFSA_SINGLE_MIN_CONTRIBUTION = "product.hcfsa.single.minimum_annual_contribution",
    HCFSA_SINGLE_MAX_CONTRIBUTION = "product.hcfsa.single.maximum_annual_contribution",
    WELLTHIE_AGENT_LEVEL = "core.account.wellthie_applicable_agent_levels",
    PROPOSALS = "portal.producer.payroll_tab.prospects.proposals.enabled",
    ADDITIONAL_CONTRIBUTION_HSA_MAX_LIMIT = "product.hsa.irs.55plus_catchup",
    ADDITIONAL_CONTRIBUTION_HSA_MIN_LIMIT = "product.hsa.irs.single.minimum_annual_contribution",
    AFLAC_GROUP_HARD_STOP_ERROR = "general.aflac_groups.benefit_offering.aflac_group_offering_error.hard_stop.values",
    TPI_END_COVERAGE_ENABLE = "general.tpi.end_coverage.enable",
    PAYROLL_VIRTUAL_F2F_IDV = "portal.producer.identity_verification.payroll_virtualf2f_enrollment.enable",
    DEFAULT_CLASS_PAY_FREQUENCY = "general.feature.enable.default_class_pay_frequency",
    HIDDEN_FROM_EMPLOYEE = "portal.member.form.dependent.hiddenFromEmployee",
    INELIGIBLE_FOR_COVERAGE = "portal.member.form.dependent.ineligibleForCoverage",
    HIDE_DISABLED_CHECKBOX = "portal.member.form.dependent.isDisabled",
    MINIMUM_SUBSCRIBER_AGE = "general.data.minimum_subscriber_age",
    SINGLE_LINE_INPUT_MAX_LENGTH = "general.data.single_line_input_max_length",
    CROSS_BORDER_RULE_ENABLED = "general.feature.enable.cross_border_sales_rule",
    SUBSCRIBER_MIN_BIRTH_YEAR = "general.data.minimum_subscriber_birth_year",
    MAX_NUMBER_OF_CUSTOMERS = "portal.max_customers.direct_account",
    WEBEX_LINK = "aflac.shopping.enrollment_methods.virtual_face_to_face.webex_link",
    VIRTUAL_FACE_TO_FACE_ENABLED = "aflac.shopping.enrollment_methods.virtual_face_to_face.enable",
    EMPLOYEE_ID_MAX_LENGTH = "general.employee.id.max_length",
    CHILD_MAX_AGE = "general.data.child.age.maximum",
    CHILD_MAX_AGE_NY = "ny.data.child.age.maximum",
    MAX_HOURS_PER_WEEK = "general.employee.work.hours_per_week.max",
    MIN_HOURS_PER_WEEK = "general.employee.work.hours_per_week.min",
    COVERAGE_SUMMARY_BENEFICIARY_UPDATE_ALLOCATION = "portal.producer.coverageSummary.beneficiary.updateAllocation",
    AG_BO_MIN_DAYS_BETWEEN_OE_AND_COVERAGE = "general.aflac_groups.benefit_offering.mindays_between_oe_end_and_coverage_start",
    AG_BO_MAX_DAYS_BETWEEN_OE_AND_COVERAGE = "general.aflac_groups.benefit_offering.max_days_between_oe_end_and_coverage_start",
    FUTURE_DAYS_ALLOWED_FOR_NEW_HIRE_DATE = "broker.group_portal.employee.hire_date.future_days_allowed",
    POLICY_VOID_REASON_ENABLE = "general.feature.policy.void.reason.enable",
    POLICY_VOID_COMMENT_ENABLE = "general.feature.policy.void.comment.enable",
    HIDE_RIDERS_BENEFIT_AMOUNT = "user.enrollment.planFlow.hide_plan_options_for_benefit_amt_riders",
    ADMIN_REVIEW_PLANS = "group.acknowledgement.admin_review_plans",
    PROSPECT_EMPLOYEE_TAB = "portal.producer.employee_tab.prospects.enabled",
    EMPLOYEE_THRESHOLD_VALUE = "group.employee.search.threshold",
    CHILDREN_MAX_AGE = "general.data.child.age.maximum_state_abbr_map",
    AGE_MAX_LENGTH = "general.data.age_max_length",
    JUVENILE_PLANS = "portal.enrollment.juvenile_plan_ids",
    ELIGIBLE_EMPLOYEES_MIN_VALUE = "general.data.eligible_employees_min",
    ELIGIBLE_EMPLOYEES_MAX_LENGTH = "general.data.eligible_employees_max_length",
    SIC_CODE_MAX_LENGTH = "general.data.sic_code_max_length",
    SIC_CODE_MIN_VALUE = "general.data.sic_code_min",
    SIC_CODE_MAX_VALUE = "general.data.sic_code_max",
    TPI_HEADSET_ENROLLMENT_ENABLE = "general.tpi.Headset_enrollment.enable",
    TPI_CALL_CENTER_ENROLLMENT_ENABLE = "general.tpi.call_center_enrollment.enable",
    TELEPHONE_SIGNATURE_PLACEHOLDER = "user.enrollment.telephone_signature_placeholder",
    MESSAGE_CENTER_SUBJECT_LENGTH = "general.feature.messageCenter.compose.subject_limit",
    HIDE_ARGUS_APPLICATION_OPTION = "argus_enrollment_view_application",
    RESTRICTED_STATE_FOR_SELF_ENROLLMENT = "user.shop.self_service_enrollment.restricted_state_abbr",
    MINIMUM_AFLAC_PLANS_REQUIRED_FOR_VAS = "broker.plan_year_setup.plan_choices.min_aflac_products_vas",
    MINIMUM_EMPLOYEES_FOR_SELF_ENROLLMENT = "broker.plan_year_setup.self_service_enrollment.census_upload_minimum_employee",
    HIDE_INACTIVE_ACCOUNTS_STATUS = "general.account.hide.inactive_accounts",
    SPOUSE_RIDER_CRITICAL_ILLNESS = "group.shop.aflac_group_critical_illness.spouse_rider",
    DEFAULT_SENT_DATE_CONFIG = "general.sent_enrollment.max_days",
    MIN_LOCATION_LENGTH = "general.data.group_name.length.minimum",
    MAX_LOCATION_LENGTH = "general.data.group_name.length.maximum",
    STATES_BANNED_FROM_SELF_SERVICE_ENROLLMENT = "user.shop.self_service_enrollment.banned_state_abbr",
    PR_PDA_TEMPLATE = "user.PR_Pda_form_enable",
    BLACK_LIST_PASSWORDS = "general.auth.black_list.passwords",
    COVERAGE_END_DATE_CARRIERS = "general.enrollment.extend.coverage_end_date_carriers",
    HIDE_BOTH_TAX_STATUS_IDS = "general.both.taxstatus.excluded.product.ids",
    JUVENILE_PLAN_IDS = "portal.enrollment.juvenile_plan_ids",
    SPOUSE_MINIMUM_AGE = "general.data.spouse.age.minimum",
    POLICY_CANCELLATION_TOGGLE = "policy.cancellation.update.toggle",
    SHOPPING_PRICING_UPDATE_TOBACCO_STATUS = "core.shopping.pricing.update.tobaccoStatus.enabled",
    RELATIONSHIP_TO_INSURED_MAX_LENGTH = "portal.member.form.beneficiary.relationshipToInsuredMaxLength",
    RELATIONSHIP_TO_INSURED_ENABLE = "general.feature.enable.include_employee_as_beneficiary_for_juvenile_life",
    NBS_FAX_COVER_SHEET_LINK = "broker.pended_business.nbs_fax_cover_sheet_link",
    POLICY_FEE_WAIVER_BENEFIT_MIN = "core.shopping.products.policyFeeWaiver.benefitMin",
    BUSINESS_DISPLAY_MESSAGES_MAXIMUM = "aflac.account.read.business.display.messages.maximum",
    TELEPHONE_INITIAL_PLACEHOLDER = "user.enrollment.telephone_initial_placeholder",
    AUTHORIZATION_AGREEMENT = "user.payment.authorization_agreement",
    ALLOW_USER_TO_SHOP_MORE_THAN_120_DAYS = "general.enrollment.coverage_start_date.allow_more_than_120_days.enable",
    PRODUCER_PERMISSION_TPP_RESTRICT_CREATE_MEMBER = "producer.permission.tpp.restrict_createMember_censusUpload_importMembers",
    PRODUCER_NOTIFICATION_TRIGGER_TYPE_ALL = "general.notifications.codes.display_count_as_one_for_reportingmanager",
    CALL_CENTER_8X8_START_TIME_DEFAULT = "core.account.create.callCenter.8x8_transmittal.start_time_default",
    CALL_CENTER_8X8_END_TIME_DEFAULT = "core.account.create.callCenter.8x8_transmittal.end_time_default",
    CALL_CENTER_8X8_TRANSMITTAL_ENABLED = "core.account.create.callCenter.8x8_transmittal.enabled",
    CALL_CENTER_8X8_TRANSMITTAL_ALLOWED = "core.account.create.callCenter.8x8_transmittal.allowed",
    CALL_CENTER_8X8_TRANSMITTAL_MIN_EMPLOYEES = "core.account.create.callCenter.8x8_transmittal.min_employees",
    // eslint-disable-next-line max-len
    CALL_CENTER_8X8_TRANSMITTAL_INBOUND_MIN_ELIGIBLE_EMPLOYEES = "core.account.create.callCenter.8x8_transmittal.inbound_min_eligible_employees",
    // eslint-disable-next-line max-len
    CALL_CENTER_8X8_TRANSMITTAL_DISABILITY_MIN_EMPLOYEES = "core.account.create.callCenter.8x8_transmittal.disability_enrollment_min_employees",
    // eslint-disable-next-line max-len
    CALL_CENTER_8X8_TRANSMITTAL_CUSTOM_RECORDING_MAX_CHARACTERS = "core.account.create.callCenter.8x8_transmittal.custom_recording_max_characters_allowed",
    CALL_CENTER_8X8_TRANSMITTAL_SUPPORT_EMAIL = "core.account.create.callCenter.8x8_transmittal.support_email",
    CALL_CENTER_8X8_TRANSMITTAL_DISABILITY_SUPPORT_EMAIL = "core.account.create.callCenter.8x8_transmittal_disability.support_email",
    CALL_CENTER_START_DATE_FROM_MIN_DAYS = "core.account.create.callCenter.start_date_effective_from_days",
    ALLOW_USER_FOR_HIPAA_CONSENT = "general.feature.enable.hipaa_consent_preference",
    PRODUCER_PERMISSION_TPP_RESTRICT_CREATE_DEPENDENTS = "producer.permission.tpp.restrict_createDependent",
    PRODUCER_PERMISSION_TPP_RESTRICT_SHOP = "producer.permission.tpp.restrict_shop",
    HIPAA_CONSENT_SHARE_POINT_LINK = "hipaa.consent.share_point_link",
    GENERAL_UNPLUGGED_INSTALLATION_MAC_DOWNLOAD = "general.unplugged.installation_file.mac_download_link",
    GENERAL_UNPLUGGED_INSTALLATION_FILE_DOWNLOAD = "general.unplugged.installation_file.download_link",
    GENERAL_UNPLUGGED_INSTALLATION_WINDOWS_MAC_DOWNLOAD = "general.unplugged.windows_mac_download",
    GENERAL_UNPLUGGED_TRAINING_RESOURCE_DOWNLOAD = "general.unplugged.training_resources_download",
    GENERAL_UNPLUGGED_GUIDE_UNPLUGGED_LINK = "general.unplugged.guide.unplugged_guide",
    GENERAL_FEATURE_USER_PROCESS_GUIDE = "general.feature.user_process_guide.url",
    A_RATED_JOB_DUTIES_AND_JOB_TITLES = "group.member.A_rated_job_duties",
    SWITCH_A_RATED_JOB_DUTIES_FEATURE = "general.feature.enforce_job_duties_for_A_rate_code.enabled",
    FEATURE_ENABLE_PEO_RULES = "general.feature.enable.peo_rules",
    PRIMARY_PORTAL_FOOTER_ACCESSIBILITY_LINK = "primary.portal.footer.accessibilityLink",
    GENERAL_FOOTER_SHOW_ACCESSIBILITY_STATEMENT = "general.footer.showAccessibilityStatement",
    ENFORCE_JOB_DUTIES_FOR_A_RATE_CODE = "general.feature.enforce_job_duties_for_A_rate_code.enabled",
    RATE_SHEET_PROPERTY_BYPASS_ENABLED = "aflac.quote.read.ratesheet.propertyBypass.enable",
    FEATURE_ENABLE_VIRGINIA_OBJECTION = "general.feature.enable.virginia_objection",
    PLAN_YEAR_SETUP_HR_APPROVAL_FOR_VAS = "broker.plan_year_setup.vas_funding_requiring_hr_approval",
    BROKER_NON_AFLAC_CARRIERS_PLAN_YEAR_APPROVAL = "broker.non_aflac_carriers_that_require_planyear_approval",
    DEFAULT_SIC_CODE = "group.attributes.default_sic_code",
    SSN_REQUIRED_FOR_EMPLOYEE_IN_PARTIAL_CENSUS = "general.data.partial_census.required_fields.employee.ssn",
    MY_AFLAC_LOGIN_LINK = "general.feature.myAflac.landingPage.link",
    MMP_LOGOUT_REDIRECT_LINK = "aflac.ciam.session.logout.url",
    EXISTING_COVERAGE_UPDATE_REQUIRED_ON_SSN_ENTRY = "general.tpi.partial_census.enable.call_existing_coverage.on_ssn_update",
    HIDE_PLAN_OPTIONS_FOR_ADD_ON_RIDERS = "user.enrollment.planflow.hide_plan_options_for_addon_riders",
    MATCH_BASE_PLAN_READONLY_RIDER_IDS = "broker.quote.matchbaseplan_readonly_rider_ids",
    SHOP_ADDITIONAL_UNIT_PRODUCT_IDS = "user.shop.additional_unit_product_id",
    ADDITIONAL_UNIT_OFFTHEJOB_RIDER_PLAN_IDS = "user.enrollment.a35000.additionalunit_offthejob_rider_plan_ids",
    ADDITIONAL_UNIT_OFFTHEJOB_RIDER_COVERAGE_LEVEL_IDS = "user.enrollment.a35000.additionalunit_offthejob_rider_retain_coverage_level_ids",
    SHOP_BUY_UP_PRODUCT_ID = "user.shop.buyups_product_id",
    MULTIPLE_SELECTIONS_QUICK_QUOTE = "general.feature.quickquote.multiple.selection.logic",
    GI_ENROLLMENT_DATES_FEATURE = "general.feature.gi_enrollment_dates.enabled",
    GI_MIN_ENROLL_PERIOD_IN_DAYS = "enrollment.guaranteed.issued.period.minimum.days",
    GI_MAX_ENROLL_PERIOD_IN_DAYS = "enrollment.guaranteed.issued.period.maximum.days",
    DEFAULT_GI_ENROLLMENT_END_DATE = "group.coverage.default_gi_enrollment_end_date",
    QQ_SKIP_MULTIPLE_SELECTION_FOR_RIDER = "quickquote.skip_multiple_selection_for_rider",
    TPP_RESTRICT_COVERAGE_START_DATE = "general.tpp.restrict_coverage_start_date.update",
    GA_ENABLE_PRIVACY_RULES_ENROLLER = "general.account.enable.privacy_rules.enroller",
    GENERAL_EMPLOYEE_SALARY_ANNUAL_MIN = "general.employee.salary.annual.min",
    GENERAL_EMPLOYEE_SALARY_ANNUAL_MAX = "general.employee.salary.annual.max",
    CARRIER_FORM_Q60_FULLTIME_PARTTIME = "carrier_form.q60.fulltime_parttime_employeeQuestionIds",
    SEND_STANDALONE_DEMOGRAPHIC_CHANGE_DATA_TO_AFLAC = "general.feature.enable.send_demographic_change_data_to_aflac_on_member_update",
    CARRIER_FORM_Q60_REPLACEMENT_QUESTION_IDS = "carrier_form.q60.group_agent_replacement_questionIds",
    PROPOSALS_A68_LIFE_PLAN_STATES = "general.core.proposal.states_for_A68_life_plans",
    PAYMETRIC_MERCHANT_GUID_VSP = "paymetric.merchantGUID.vsp",
    PAYMETRIC_MERCHANT_GUID_AFLAC = "paymetric.merchantGUID.aflac",
    PNC_IFRAME_MAX_FAILURE_ATTEMPTS = "pnc.iframe.max_failure_attempts",
    SSN_CONFIRMATION_ENABLED = "general.feature.enable.ssn_confirmation",
    EBS_PAYMENT_FEATURE_ENABLE = "general.feature.enable.paylogix_payment",
    CASE_BUILDER_FEATURE_ENABLE = "general.feature.enable.caseBuilder",
    UNPLUGGED_CONFIG = "general.feature.disable.for_unplugged",
    ENABLE_NOTIFICATIONS = "general.feature.notifications.enable",
    MAX_PRIMARY_BENEFICIARY_ALLOWED = "user.beneficiary.max_primary_allowed",
    MAX_SECONDARY_BENEFICIARY_ALLOWED = "user.beneficiary.max_secondary_allowed",
    COV_DATE_MUST_MATCH_EVENT_DATE = "member.qle.coverage_start_date.validation_error.must_match_event_date.enabled",
    DAYS_CONSIDERED_AS_NEW_HIRE = "group.employee.days_considered_new_hire",
    PRIVACY_PRACTICES_NOTICE_LINK = "privacy_practices_notice_link",
    USER_APPLICATION_REVIEW_REQUIRED_STATES = "user.enrollment.application_review_required.states",
    USER_APPLICATION_REVIEW_REQUIRED = "user.enrollment.application_review_required",
    ENROLLMENT_AFLAC_VISION_PLANS = "user.enrollment.aflac_vision_plans",
    ENROLLMENT_LIFE_APPLICANT_OWNER_QUESTION_IDS = "user.enrollment.life_applicant_owner_question_ids",
    REVIEW_REQUIRED_POLICY_SERIES_REGEX = "user.enrollment.application_review_required.policySeries_regex",
    BROKER_CALL_CENTER_AGENT_PIN = "broker.call_center_agent.pin",
    EMAIL_RESTRICTION_LIST = "general.email.restriction.list",
    RESTRICTED_DOMAIN_ACCOUNTS_MAP = "general.email.restriction.domain.accounts.map",
    SMARTQUOTE_ACCOUNT_TYPES = "broker.group_details.smartquote_account_Types",
    SMARTQUOTE_JOB_CLASSES = "broker.smartquote_job_classes",
    SMARTQUOTE_PAYROLL_FREQUENCIES = "broker.smartquote_payroll_frequencies",
    QQ_LIFE_PLAN_MULTIPLE_SELECTIONS = "general.feature.quickQuote.lifePlan.multiple.selections",
    EVERWELL_GUIDE = "everwell_guide.share_point_link.url",
    HR_EMAIL = "hr_email.share_point_link.url",
    PROPOSAL_PAYROLL_FREQUENCIES = "broker.proposal_payroll_frequencies",
    QQ_LIFE_RIDERS_MAX_BENEFIT_AMOUNT_LIMIT = "broker.quick_quote_max_BenefitAmount_Limit_for_RiderPlans",
    QQ_DEFAULT_CHILD_AGE = "broker.group_details.quote.default_child_age",
    RATE_SHEETS_ENABLED = "aflac.ratesheet.enabled",
    AFLAC_QUOTE_RATE_SHEET_ENABLED = "aflac.quote.ratesheet.enabled",
    RATE_SHEET_TERM_WHOLE_LIFE_SPOUSE_RIDER = "broker.quick_quote.term_whole_life.spouse_rider",
    MISSING_FLYER_FEATURE_ENABLE = "general.feature.enable.display_flyer_missing_message",
    DIRECT_WHOLE_LIFE_RIDER_NOT_AVAILABLE = "quick.quote.rider.notAvailable.over.value",
    CHILD_MIN_AGE_ALLOWED_FOR_LIFE_IN_DAYS = "user.enrollment.NY68000_life.child_min_age_in_days",
    CHILD_MAX_AGE_ALLOWED_FOR_LIFE_IN_YEARS = "user.enrollment.NY68000_life.child_max_age_in_years",
    NY_MARKET_CONDUCT = "general.feature.enable.ny.market.conduct",
    STRONGLY_RECOMMEND_EMAIL = "general.feature.enable.email_address_field_messaging",
    ALLOW_MULTIPART_FILE_UPLOAD = "general.document.allow_multipart_file_upload",
    AGE_REPOSITION_CONFIG = "general.feature.shop.enable.age_reposition",
    REVISE_AFLAC_ALWAYS_FEATURE_ENABLE = "general.feature.enable.revise_aflac_always",
    COVERAGE_DATE_BOLD_VISIBILITY_ENABLED = "core.shopping.coverageEffectiveDate.contentUpdate.enabled",
    WORKSITE_LOCATION_ENABLED = "general.feature.enable.worksite_location",
    FILE_UPLOAD_DELAY = "general.document.aws.file_upload.delay",
    CSS_VIRUS_SCAN = "general.feature.enable.upload_document.virus_scan.css_api",
    MAX_UPLOAD_FILE_SIZE = "general.upload.max_file_size",
    MAX_UPLOAD_FILE_SIZE_PENDED_BUSINESS = "pendedBusiness.upload.max_file_size",
    ENABLE_EMPLOYER_NAME_FIELD = "general.data.enable_employer_name_field",
    EMPLOYER_NAME_FIELD_ACCOUNT_CATEGORIES = "general.attributes.employer_name_field.allowed_account_categories",
    RELAX_SSN_FOR_TEST_MEMBER = "general.feature.enable.relax_ssn_restriction.test_user",
    AFLAC_ALWAYS_EXCLUDED_PRODUCTS = "general.enrollment.aflac_always.excluded_products",
    AFLAC_ALWAYS_INELIGIBLE_STATE = "general.enrollment.aflac_always.excluded_states",
    REVISE_AFLAC_ALWAYS_FEATURE_TPI = "general.tpi.feature.enable.revise_aflac_always",
    FEATURE_ENABLE_TAX_ID_FOR_ABS = "general.feature.enable.tax_id_required_for_ABS",
    ENROLLMENT_SUMMARY_RECEIPT = "general.feature.enable.enrollment_summary_receipt",
}

export enum AddressConfig {
    ADDRESS_VALIDATION = "general.feature.enable.aflac.api.address_validation",
    PLAN_IDS_REQUIRING_WORK_STATE_AND_ZIP = "general.enrollment.plan_ids.work_contact_state_and_zip_required",
    ZIP_MIN_LENGTH = "portal.member.form.general.zipCodeMinLength",
    ZIP_MAX_LENGTH = "portal.member.form.general.zipCodeMaxLength",
    CITY_NAME_MIN_LENGTH = "general.data.city_name.length.minimum",
    VALIDATE_ADDRESS_MATCH = "general.feature.validate.address.matching.logic",
    ENABLE_DEPENDENT_ADDRESS_MODAL = "general.feature.enable.dependent.address.modal",
}

export enum PEGAConfig {
    PEGA_CHAT_SRC_URL = "general.pegaChat.src_URL",
    PEGA_CHAT_MEMBER_CONFIG = "general.pegaChat.member.enable",
    PEGA_CHAT_PRODUCER_CONFIG = "general.pegaChat.producer.enable",
    PEGA_CHAT_ADMIN_CONFIG = "general.pegaChat.admin.enable",
    PEGA_MASHUP_LOCATION = "pega.js.script.mashup",
    PEGA_CHAT_CSS_SELF_SERVICE_NBA_URL = "pega.js.script.cssSelfServiceNba",
    PEGA_CHAT_AFLAC_SELF_SERVICE_URL = "pega.js.script.aflacSelfService",
    PEGA_CHAT_CO_BROWSE_TOKEN = "pega.js.script.config.cobrowse_token",
    PEGA_CHAT_CO_BROWSE_SERVER_HOST_URL = "pega.js.script.config.cobrowse_server_hosturl",
    PEGA_CHAT_MASHUP_SCRIPT_DELAY = "general.pegaChat.mashup.script.delay",
}

export enum DirectConfig {
    DAYS_ALLOWED_DIRECT_FIRST_PAYMENT = "user.payment.direct_allowed_days_for_first_payment",
    LAST_DAY_OF_MONTH_DIRECT_FIRST_PAYMENT = "user.payment.direct_last_day_of_month_for_payment",
}

export enum MicroSiteConfig {
    MICROSITE_ACCOUNT_LANDING_PAGE_URL = "general.microsites.account.landing.pages.url",
    MICROSITE_ACCOUNT_LANDING_PAGE_ENABLE = "general.feature.enable.microsites.account.landing.pages",
}

/**
 * Configurations always come as strings from api response.
 * This DataType is the instruction on how to convert string to its actual expected value.
 */
export const enum ConfigurationDataType {
    STRING = "STRING",
    INTEGER = "INTEGER",
    BOOLEAN = "BOOLEAN",
    LIST_STRING = "LIST_STRING",
    LIST_INTEGER = "LIST_INTEGER",
    LIST_BOOLEAN = "LIST_BOOLEAN",
}

// TODO [Types]: These config names should be added to ConfigName enum in constants lib
export enum RewriteConfigName {
    EMPLOYER_CONTRIBUTION_EXCLUDED_STATES = "general.enrollment.benefitDollar.excluded.state.list",
    CHILD_MAX_AGE_IN_YEARS = "user.enrollment.juvenile_life.child_max_age_in_years",
    CHILD_MIN_AGE_IN_DAYS = "user.enrollment.juvenile_life.child_min_age_in_days",
    /**
     * Enable New shop Only `general.broker.feature.new_shop.enabled` is true.
     * All users will route to new shop when `general.broker.feature.new_shop.enabled` is true.
     */
    /**
     * @deprecated - no longer used since we are not conditionally loading old producer shop
     */
    NEW_SHOP_ENABLED = "general.broker.feature.new_shop.enabled",
    /**
     * Route the users to new shop which are in config list `general.broker.feature.new_shop.enabled.pilot_users`:
     * List of Admin ids/Credentials id
     *
     * If the list of config `general.broker.feature.new_shop.enabled.pilot_users` is null all user will route to old shop.
     */
    /**
     * @deprecated - no longer used since we are not conditionally loading old producer shop
     */
    NEW_SHOP_ENABLED_PILOT_USERS = "general.broker.feature.new_shop.enabled.pilot_users",
}
export enum TempusPaymentConfig {
    TEMPUS_IFRAME_ENABLE_CONFIG = "general.feature.enable.tempus_payment_service",
    TEMPUS_IFRAME_URL = "tempus.iframe.url",
    TEMPUS_PCR_IFRAME_ENABLE_CONFIG = "general.feature.enable.pcr_transfer_to_direct_via_tempus",
    TEMPUS_ACH_IFRAME_ENABLE_CONFIG = "general.feature.enable.ach_tempus_payment_service",
    TEMPUS_PCR_ACH_IFRAME_ENABLE_CONFIG = "general.feature.enable.pcr_ach_transfer_to_direct_via_tempus",
    TEMPUS_ACH_EDIT_ENABLE_CONFIG = "general.feature.enable.ach_edit_tempus_payment_service",
}
